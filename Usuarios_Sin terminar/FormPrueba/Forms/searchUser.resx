<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnBuscar.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>